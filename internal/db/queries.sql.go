// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: queries.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const getUserByID = `-- name: GetUserByID :one
SELECT id, name, email FROM users WHERE id = $1
`

type GetUserByIDRow struct {
	ID    uuid.UUID
	Name  string
	Email string
}

func (q *Queries) GetUserByID(ctx context.Context, id uuid.UUID) (GetUserByIDRow, error) {
	row := q.db.QueryRowContext(ctx, getUserByID, id)
	var i GetUserByIDRow
	err := row.Scan(&i.ID, &i.Name, &i.Email)
	return i, err
}

const getUserByName = `-- name: GetUserByName :one
SELECT id, name, email FROM users WHERE name = $1
`

type GetUserByNameRow struct {
	ID    uuid.UUID
	Name  string
	Email string
}

func (q *Queries) GetUserByName(ctx context.Context, name string) (GetUserByNameRow, error) {
	row := q.db.QueryRowContext(ctx, getUserByName, name)
	var i GetUserByNameRow
	err := row.Scan(&i.ID, &i.Name, &i.Email)
	return i, err
}
